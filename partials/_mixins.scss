@import "variables.scss";

@mixin header($backgroundColor, $detailColor, $fontSize, $menuSize) {
  height: $headerHeight;
  position: relative;
  display: grid;

  background-color: $backgroundColor;

  padding: 0 10vmin;

  a {
    display: block;

    color: $detailColor;
    font-weight: bold;
    font-size: $fontSize;

    text-decoration: none;
  }
  a.menu {
    position: relative;
    left: calc($menuSize * -0.5 - 5vmin);
    top: calc(3.5dvh - $menuSize/2);

    height: $menuSize;
    aspect-ratio: 1;

    display: grid;
    justify-self: start;

    z-index: 1;
    div.menu {
      top: $menuSize/3;
      &:before {
        top: -200%;
      }
      &:after {
        top: 100%;
      }
      &:before,
      &:after {
        content: "";
      }
      &:before,
      &:after,
      & {
        position: relative;
        display: block;
        height: $menuSize/6;
        aspect-ratio: 6;

        background-color: $detailColor;

        border-radius: 8% 8% 8% 8% / 40% 40% 40% 40%;
      }
    }
  }
  nav {
    display: grid;
    grid-template-columns: repeat(6, 1fr);

    position: absolute;
    left: 10vmin;

    width: calc(100dvw - 20vmin);
    height: $headerHeight;

    .slide {
      position: relative;
      top: -$headerHeight;

      justify-self: center;
      align-self: center;
    }
  }
  @media (max-width: $breakpointPhone) {
    grid-row: 1/4;
    grid-column: 1/2;
    height: 100dvh;
    width: calc(100dvw - 20vmin);
    left: -100dvw;
    z-index: 1;
    grid-template-rows: auto 1fr;

    a {
      font-size: $mobileFontSize;
    }

    a.menu {
      position: absolute;
      left: calc(100dvw - $menuSize/2 + 5vmin);
    }

    nav {
      grid-template-rows: repeat(6, 1fr);
      grid-template-columns: 1fr;
      // justify-self: center;
      align-self: center;
      height: 80dvh;
      .slide {
        top: 0;
      }
    }
  }
  @media (min-width: $breakpointLandscape) and (max-height: $breakpointPhone) {
    height: $headerHeightLandscape;
    align-items: center;
    nav .slide {
      top: -$headerHeightLandscape;
    }
    a.menu {
      top: calc($headerHeightLandscape/2 - 7dvh);
    }
  }
}

@mixin main($detailColor) {
  position: relative;
  top: -$headerHeight;

  padding: 0 10vmin;
  .content {
    h2 {
      margin-top: 0px;
    }
    .wrapper.pcsystem {
      grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
      img {
        max-width: calc(500px - 2rem);
      }
      @media (max-width: $breakpointPhone) {
        grid-template-columns: repeat(
          auto-fit,
          minmax(400px, calc(100dvw - 20vmin))
        );
        img {
          max-width: calc(100dvw - 20vmin - 2rem);
          border-radius: 20%;
        }
      }
    }
    .wrapper {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
      gap: 1rem;
      h2 {
        margin: 0;
      }
      article {
        padding: 1rem;
        background-color: map-get($map: $colorList, $key: articleColor);
        border-radius: 2rem;
      }
    }
  }
  .banner {
    background: url(images/banner.webp) no-repeat center center/cover;
    background-size: cover;
    height: 35dvh;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    align-items: center;
    justify-items: center;

    margin-bottom: 1.5rem;

    z-index: 2;

    p {
      font-size: $bannerFontSize;
      font-weight: 600;
      color: $detailColor;
      margin: 0;
    }
    .club {
      grid-column: 3/4;
    }
  }
  @media (max-width: $breakpointPhone) {
    grid-row: 1/2;
    grid-column: 2/3;
    left: -100dvw;
  }
  @media (min-width: $breakpointLandscape) and (max-height: $breakpointPhone) {
    top: -$headerHeightLandscape;
  }
}

@mixin footer($footerColor) {
  grid-row: 3/4;
  display: grid;
  grid-template-columns: 1fr 1fr;
  background-color: $footerColor;

  padding: 0 calc(10vmin + 1rem);
  .gdpr {
    grid-column: 2/3;
  }
  @media (max-width: $breakpointPhone) {
    grid-row: 2/3;
    grid-column: -2/-1;
    position: relative;
    left: -100dvw;

    grid-template-columns: 1fr;
    grid-template-rows: repeat(2, auto);

    .gdpr {
      grid-column: auto;
    }
  }
}
